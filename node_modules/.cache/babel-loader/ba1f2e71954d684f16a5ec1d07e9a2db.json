{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jacobmitrani/Desktop/WebDev/Supreme-Ice-Cream/src/Login.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Flavors from \"./Flavors\"; //import { useForm } from 'react-hook-form';\n\nconst init_flavors = [// { name: \"vanilla\", qty: 4 },\n  // { name: \"chocolate\", qty: 10 },\n  // { name: \"mint chip\", qty: 3 },\n  // { name: \"strawberry\", qty: 0 },\n  // { name: \"phish food\", qty: 40 }\n];\nexport default _s(() => {\n  _s();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [correctUser, setCorrectUser] = useState(false);\n\n  function handleSubmit() {\n    if (email === \"j@j.com\" && password === \"123\") {\n      setCorrectUser(true);\n    } else {\n      alert('wrong email or password');\n    }\n\n    setEmail(\"\");\n    setPassword(\"\");\n  }\n\n  const [flavors, setFlavors] = useState(init_flavors);\n  const [name, setName] = useState(\"\");\n  const [qty, setQty] = useState(0);\n\n  const newName = event => {\n    const nname = event.currentTarget.value;\n    setName(nname);\n  };\n\n  const newQty = event => {\n    const nqty = event.currentTarget.valueAsNumber;\n    setQty(nqty);\n  };\n\n  const addStock = () => {\n    let x = {\n      flavor: {\n        name,\n        qty\n      }\n    };\n    setFlavors([...flavors, x]);\n  };\n\n  if (!correctUser) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"update stock\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"icecream name\",\n        value: name,\n        onChange: newName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"icecream quantity\",\n        value: qty,\n        onChange: newQty\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: addStock\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCorrectUser(false),\n        children: \"Log out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: flavors.map(Flavors)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 6\n    }, this);\n  }\n}, \"xWa1QpyysnSi3zlLSEW/z3SFv0Q=\");","map":{"version":3,"sources":["/Users/jacobmitrani/Desktop/WebDev/Supreme-Ice-Cream/src/Login.tsx"],"names":["React","useState","Flavors","init_flavors","email","setEmail","password","setPassword","correctUser","setCorrectUser","handleSubmit","alert","flavors","setFlavors","name","setName","qty","setQty","newName","event","nname","currentTarget","value","newQty","nqty","valueAsNumber","addStock","x","flavor","e","target","map"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Flavors from \"./Flavors\";\n//import { useForm } from 'react-hook-form';\n\ntype flavor = { flavor: {name: string, qty: number }}\nconst init_flavors:flavor[] = [\n    // { name: \"vanilla\", qty: 4 },\n    // { name: \"chocolate\", qty: 10 },\n    // { name: \"mint chip\", qty: 3 },\n    // { name: \"strawberry\", qty: 0 },\n    // { name: \"phish food\", qty: 40 }\n  ]\nexport default () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [correctUser, setCorrectUser] = useState(false);\n\n  function handleSubmit() {\n    if (email === \"j@j.com\" && password===\"123\") {\n      setCorrectUser(true);\n    }\n    else {\n      alert('wrong email or password');\n    }\n    setEmail(\"\");\n    setPassword(\"\");\n  }\n  const [flavors, setFlavors] = useState(init_flavors);\n  const [name, setName] = useState(\"\");\n  const [qty, setQty] = useState(0);\n\n  const newName = (event:React.ChangeEvent<HTMLInputElement>) => {\n    const nname = event.currentTarget.value;\n    setName(nname);\n  }\n  const newQty = (event:React.ChangeEvent<HTMLInputElement>) => {\n    const nqty = event.currentTarget.valueAsNumber;\n    setQty(nqty);\n  }\n  const addStock=() => {\n    let x = {flavor: {name, qty}}\n    setFlavors([...flavors, x]);\n  } \n  \n  if (!correctUser){\n    return (\n      <div>\n        <form onSubmit = {handleSubmit}>\n          <label>\n            Email:\n            <input type=\"email\" value = {email} onChange={(e) => setEmail(e.target.value)} />\n          </label>\n          <label>\n            <input type=\"password\" value = {password} onChange={(e) => setPassword(e.target.value)} />\n          </label>\n          <input type=\"submit\" value = \"Submit\" />\n        </form>\n      </div>\n    );\n  }\n  else {\n    \n    return (\n     <div>\n       <p>update stock</p>\n       <input type = \"text\" placeholder=\"icecream name\" value={name} onChange={newName}></input>\n       <input type=\"number\" placeholder=\"icecream quantity\" value={qty} onChange={newQty}></input>\n       <button type=\"button\" onClick={addStock}></button>\n       {/* create form for the user to add info to main page */}\n       <button onClick={()=> setCorrectUser(false)}>Log out</button>\n       <div>{flavors.map(Flavors)}</div>\n     </div> \n    )\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}